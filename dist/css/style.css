body {
  margin: 0;
  padding: 0;
}

@keyframes scale1 {
  from {
    scale: 0;
  }

  50% {
    scale: 50%;
  }

  to {
    scale: 100%;
  }
}

header {
  position: relative;
  display: flex;
  flex-direction: row;
  background-image: url("../img/1.jpg");
  background-size: cover;
  height: 75vh;
  overflow: hidden;
}

.container {
  position: relative;
  display: flex;
  flex-wrap: wrap;
  align-content: flex-start;
  width: auto;
  height: 50px;
}

.block {
  width: 50px;
  height: 50px;
  background-color: rgba(118, 185, 0, 0.5);
  box-sizing: border-box;
  border: 1px solid darkgreen;
  border-radius: 10px;
  transition: 0.05s;
}

.block img {
  width: 15px;
}

.block:hover {
  transform: translateY(-5px);
  box-shadow: 0 2px 5px;
  background-color: rgba(118, 185, 0, 0.7);
}

button {
  position: absolute;
  top: 50%;
  left: 50%;
  width: 150px;
  margin-left: -50px;
  padding: 10px 15px;
  font: inherit;
  text-align: center;
  text-shadow: 0 -1px 1px rgba(0, 0, 0, 0.4);
  color: #ffffff;
  vertical-align: middle;
  text-transform: uppercase;
  background-image: linear-gradient(#cc0630 0%, #8f0222 75%, #6d0019 100%);
  border-radius: 5px;
  border: none;
  overflow: hidden;
}

button:hover {
  box-shadow: inset 0 0 0 1px rgba(0, 0, 0, 0.2), 1px 3px 3px #555555;
}

button::after {
  content: "";
  position: absolute;
  top: 0;
  width: 20%;
  height: 100%;
  background-color: rgba(255, 255, 255, 0.3);
  transform: skewX(40deg);
  animation: blick;
  animation-duration: 4s;
  animation-iteration-count: infinite;
}

@keyframes blick {
  0% {
    left: -30%;
  }

  70% {
    left: -30%;
  }

  100% {
    left: 120%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIl9iYXNlLnNjc3MiLCJzdHlsZS5jc3MiLCJibG9ja3MvX2hlYWRlci5zY3NzIiwiYmxvY2tzL19idXR0b24uc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFNBQVM7RUFDVCxVQUFVO0FDQ1o7O0FBRUE7RUFDRTtJQ0pBLFFBQUc7RURNSDs7RUFFQTtJQUNFLFVBQVU7RUNMZDs7RUFFRTtJQUNBLFdBQUE7RUFDQTtBRE9GOztBQUVBO0VBQ0Usa0JBQWtCO0VDSnBCLGFBQVc7RUFDVCxtQkFBa0I7RUFDbEIscUNBQWE7RUFDYixzQkFBZTtFQUNmLFlBQUE7RUFDQSxnQkFBVztBRE1iOztBQ0ZBO0VBQ0Usa0JBQVc7RUFDWCxhQUFZO0VBQ1osZUFBQTtFQUNBLHlCQUFzQjtFQUN0QixXQUFRO0VBQ1IsWUFBQTtBREtGOztBQUVBO0VDYkEsV0FBTTtFRGVKLFlDSFc7RURJWCx3Q0NIdUI7RURJdkIsc0JDSG9CO0VESXBCLDJCQUEyQjtFRTNDN0IsbUJBQU87RUFDTCxpQkFBVTtBRjZDWjs7QUFFQTtFRTNDRSxXQUFXO0FGNkNiOztBQUVBO0VFMUNFLDJCQUF3QjtFQUN4QixxQkFBYztFQUNkLHdDQUFzQjtBRjRDeEI7O0FBRUE7RUV6Q0Usa0JBQVk7RUFDWixRQUFRO0VBbEJWLFNBQU07RUY4REosWUUxQ1k7RUFwQmQsa0JBd0JXO0VGd0NULGtCRXZDYTtFRndDYixhRXRDWTtFRnVDWixrQkV0Q1E7RUZ1Q1IsMENFckNZO0VGc0NaLGNFckNjO0VGc0NkLHNCRXBDb0I7RUZxQ3BCLHlCRW5DeUI7RUZvQ3pCLHdFRWxDa0I7RUZtQ2xCLGtCRWxDRTtFRm1DRixZRWxDRTtFRm1DRixnQkFBZ0I7QUUvQmxCOztBRmtDQTtFRTlCRSxtRUFBRztBRmdDTDs7QUFFQTtFQUNFLFdBQVc7RUFDWCxrQkFBa0I7RUFDbEIsTUFBTTtFQUNOLFVBQVU7RUFDVixZQUFZO0VBQ1osMENBQTBDO0VBQzFDLHVCQUF1QjtFQUN2QixnQkFBZ0I7RUFDaEIsc0JBQXNCO0VBQ3RCLG1DQUFtQztBQUNyQzs7QUFFQTtFQUNFO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0UsVUFBVTtFQUNaOztFQUVBO0lBQ0UsVUFBVTtFQUNaO0FBQ0YiLCJmaWxlIjoic3R5bGUuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYm9keSB7XHRcclxuICBtYXJnaW46IDA7XHJcbiAgcGFkZGluZzogMDtcclxufSIsImJvZHkge1xuICBtYXJnaW46IDA7XG4gIHBhZGRpbmc6IDA7XG59XG5cbkBrZXlmcmFtZXMgc2NhbGUxIHtcbiAgZnJvbSB7XG4gICAgc2NhbGU6IDA7XG4gIH1cblxuICA1MCUge1xuICAgIHNjYWxlOiA1MCU7XG4gIH1cblxuICB0byB7XG4gICAgc2NhbGU6IDEwMCU7XG4gIH1cbn1cblxuaGVhZGVyIHtcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogcm93O1xuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvMS5qcGdcIik7XG4gIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG4gIGhlaWdodDogNzV2aDtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuLmNvbnRhaW5lciB7XG4gIHBvc2l0aW9uOiByZWxhdGl2ZTtcbiAgZGlzcGxheTogZmxleDtcbiAgZmxleC13cmFwOiB3cmFwO1xuICBhbGlnbi1jb250ZW50OiBmbGV4LXN0YXJ0O1xuICB3aWR0aDogYXV0bztcbiAgaGVpZ2h0OiA1MHB4O1xufVxuXG4uYmxvY2sge1xuICB3aWR0aDogNTBweDtcbiAgaGVpZ2h0OiA1MHB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExOCwgMTg1LCAwLCAwLjUpO1xuICBib3gtc2l6aW5nOiBib3JkZXItYm94O1xuICBib3JkZXI6IDFweCBzb2xpZCBkYXJrZ3JlZW47XG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XG4gIHRyYW5zaXRpb246IDAuMDVzO1xufVxuXG4uYmxvY2sgaW1nIHtcbiAgd2lkdGg6IDE1cHg7XG59XG5cbi5ibG9jazpob3ZlciB7XG4gIHRyYW5zZm9ybTogdHJhbnNsYXRlWSgtNXB4KTtcbiAgYm94LXNoYWRvdzogMCAycHggNXB4O1xuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExOCwgMTg1LCAwLCAwLjcpO1xufVxuXG5idXR0b24ge1xuICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gIHRvcDogNTAlO1xuICBsZWZ0OiA1MCU7XG4gIHdpZHRoOiAxNTBweDtcbiAgbWFyZ2luLWxlZnQ6IC01MHB4O1xuICBwYWRkaW5nOiAxMHB4IDE1cHg7XG4gIGZvbnQ6IGluaGVyaXQ7XG4gIHRleHQtYWxpZ246IGNlbnRlcjtcbiAgdGV4dC1zaGFkb3c6IDAgLTFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xuICBjb2xvcjogI2ZmZmZmZjtcbiAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNjYzA2MzAgMCUsICM4ZjAyMjIgNzUlLCAjNmQwMDE5IDEwMCUpO1xuICBib3JkZXItcmFkaXVzOiA1cHg7XG4gIGJvcmRlcjogbm9uZTtcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcbn1cblxuYnV0dG9uOmhvdmVyIHtcbiAgYm94LXNoYWRvdzogaW5zZXQgMCAwIDAgMXB4IHJnYmEoMCwgMCwgMCwgMC4yKSwgMXB4IDNweCAzcHggIzU1NTU1NTtcbn1cblxuYnV0dG9uOjphZnRlciB7XG4gIGNvbnRlbnQ6IFwiXCI7XG4gIHBvc2l0aW9uOiBhYnNvbHV0ZTtcbiAgdG9wOiAwO1xuICB3aWR0aDogMjAlO1xuICBoZWlnaHQ6IDEwMCU7XG4gIGJhY2tncm91bmQtY29sb3I6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC4zKTtcbiAgdHJhbnNmb3JtOiBza2V3WCg0MGRlZyk7XG4gIGFuaW1hdGlvbjogYmxpY2s7XG4gIGFuaW1hdGlvbi1kdXJhdGlvbjogNHM7XG4gIGFuaW1hdGlvbi1pdGVyYXRpb24tY291bnQ6IGluZmluaXRlO1xufVxuXG5Aa2V5ZnJhbWVzIGJsaWNrIHtcbiAgMCUge1xuICAgIGxlZnQ6IC0zMCU7XG4gIH1cblxuICA3MCUge1xuICAgIGxlZnQ6IC0zMCU7XG4gIH1cblxuICAxMDAlIHtcbiAgICBsZWZ0OiAxMjAlO1xuICB9XG59IiwiQGtleWZyYW1lcyBzY2FsZTEge1xyXG4gIGZyb20ge3NjYWxlOiAwO31cclxuICA1MCUge3NjYWxlOiA1MCU7fVxyXG4gIHRvIHtzY2FsZTogMTAwJTt9XHJcbn1cclxuXHJcbmhlYWRlciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC1kaXJlY3Rpb246IHJvdztcclxuICBiYWNrZ3JvdW5kLWltYWdlOiB1cmwoXCIuLi9pbWcvMS5qcGdcIik7XHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcclxuICBoZWlnaHQ6IDc1dmg7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgZmxleC13cmFwOiB3cmFwO1xyXG4gIGFsaWduLWNvbnRlbnQ6IGZsZXgtc3RhcnQ7XHJcbiAgd2lkdGg6IGF1dG87XHJcbiAgaGVpZ2h0OiA1MHB4O1xyXG59XHJcblxyXG4uYmxvY2sge1xyXG4gIHdpZHRoOiA1MHB4O1xyXG4gIGhlaWdodDogNTBweDtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExOCwgMTg1LCAwLCAwLjUpO1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgYm9yZGVyOiAxcHggc29saWQgZGFya2dyZWVuO1xyXG4gIGJvcmRlci1yYWRpdXM6IDEwcHg7XHJcbiAgdHJhbnNpdGlvbjowLjA1cztcclxuICAmIGltZyB7XHJcbiAgICB3aWR0aDogMTVweDtcclxuICB9XHJcbiAgJjpob3ZlciB7XHJcbiAgICB0cmFuc2Zvcm06IHRyYW5zbGF0ZVkoLTVweCk7XHJcbiAgICBib3gtc2hhZG93OiAwIDJweCA1cHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2JhKDExOCwgMTg1LCAwLCAwLjcpO1xyXG4gIH1cclxufVxyXG5cclxuXHJcbiIsImJ1dHRvbiB7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHRvcDogNTAlO1xyXG4gIGxlZnQ6IDUwJTtcclxuICB3aWR0aDogMTUwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IC01MHB4O1xyXG4gIHBhZGRpbmc6IDEwcHggMTVweDtcclxuXHJcbiAgZm9udDogaW5oZXJpdDtcclxuICB0ZXh0LWFsaWduOiBjZW50ZXI7XHJcbiAgdGV4dC1zaGFkb3c6IDAgLTFweCAxcHggcmdiYSgwLCAwLCAwLCAwLjQpO1xyXG4gIGNvbG9yOiAjZmZmZmZmO1xyXG4gIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgdGV4dC10cmFuc2Zvcm06IHVwcGVyY2FzZTtcclxuXHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KCNjYzA2MzAgMCUsICM4ZjAyMjIgNzUlLCAjNmQwMDE5IDEwMCUpO1xyXG4gIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICBib3JkZXI6IG5vbmU7XHJcbiAgb3ZlcmZsb3c6IGhpZGRlbjtcclxuICAmOmhvdmVyIHtcclxuICAgIGJveC1zaGFkb3c6XHJcbiAgICAgICAgICAgIGluc2V0IDAgMCAwIDFweCByZ2JhKDAsIDAsIDAsIDAuMiksXHJcbiAgICAgICAgICAgIDFweCAzcHggM3B4ICM1NTU1NTU7XHJcbiAgfVxyXG4gICY6OmFmdGVyIHtcclxuICAgIGNvbnRlbnQ6IFwiXCI7XHJcblxyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG5cclxuICAgIHdpZHRoOiAyMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcblxyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjMpO1xyXG5cclxuICAgIHRyYW5zZm9ybTogc2tld1goNDBkZWcpO1xyXG5cclxuICAgIGFuaW1hdGlvbjogYmxpY2s7XHJcbiAgICBhbmltYXRpb24tZHVyYXRpb246IDRzO1xyXG4gICAgYW5pbWF0aW9uLWl0ZXJhdGlvbi1jb3VudDogaW5maW5pdGU7XHJcbiAgfVxyXG59XHJcblxyXG5Aa2V5ZnJhbWVzIGJsaWNrIHtcclxuICAwJSB7XHJcbiAgICBsZWZ0OiAtMzAlO1xyXG4gIH1cclxuICA3MCUge1xyXG4gICAgbGVmdDogLTMwJTtcclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICBsZWZ0OiAxMjAlO1xyXG4gIH1cclxufVxyXG5cclxuIl19 */
